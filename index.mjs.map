{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport log1p from '@stdlib/math-base-special-log1p';\n\n\n// MAIN //\n\n/**\n* Returns the cumulative distribution function (CDF) for a Bradford distribution with shape parameter `c` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} c - shape parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var v = cdf( 0.1, 0.1 );\n* // returns ~0.104\n*\n* @example\n* var v = cdf( 0.5, 5.0 );\n* // returns ~0.699\n*\n* @example\n* var v = cdf( 1.0, 10.0 );\n* // returns 1.0\n*\n* @example\n* var v = cdf( -1.0, 0.5 );\n* // returns 0.0\n*\n* @example\n* var v = cdf( 2.0, 0.5 );\n* // returns 1.0\n*\n* @example\n* var v = cdf( 0.5, 0.0 );\n* // returns NaN\n*\n* @example\n* var v = cdf( 0.5, -5.0 );\n* // returns NaN\n*\n* @example\n* var v = cdf( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var v = cdf( 1.0, NaN );\n* // returns NaN\n*/\nfunction cdf( x, c ) {\n\tif (\n\t\tisnan( c ) ||\n\t\tisnan( x ) ||\n\t\tc <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( x >= 1.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn log1p( c * x ) / log1p( c );\n}\n\n\n// EXPORTS //\n\nexport default cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function';\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport log1p from '@stdlib/math-base-special-log1p';\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Bradford distribution with shape parameter `c`.\n*\n* @param {PositiveNumber} c - shape parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 5.0 );\n* var y = cdf( 0.5 );\n* // returns ~0.699\n*\n* y = cdf( 1.0 );\n* // returns 1.0\n*/\nfunction factory( c ) {\n\tif (\n\t\tisnan( c ) ||\n\t\tc <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Bradford distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 0.5 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif (\n\t\t\tisnan( x )\n\t\t) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x >= 1.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\treturn log1p( c * x ) / log1p( c );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Bradford distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats-base-dists-bradford-cdf\n*\n* @example\n* import cdf from '@stdlib/stats-base-dists-bradford-cdf';\n*\n* var y = cdf( 0.5, 5.0 );\n* // returns ~0.699\n*\n* var myPDF = cdf.factory( 5.0 );\n* y = myPDF( 0.5 );\n* // returns ~0.699\n*\n* y = myPDF( 1.0 );\n* // returns 1.0\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["cdf","x","c","isnan","NaN","log1p","factory","constantFunction","setReadOnly","main"],"mappings":";;kfAuEA,SAASA,EAAKC,EAAGC,GAChB,OACCC,EAAOD,IACPC,EAAOF,IACPC,GAAK,EAEEE,IAEHH,GAAK,EACF,EAEHA,GAAK,EACF,EAEDI,EAAOH,EAAID,GAAMI,EAAOH,EAChC,CC3CA,SAASI,EAASJ,GACjB,OACCC,EAAOD,IACPA,GAAK,EAEEK,EAAkBH,KAe1B,SAAcH,GACb,GACCE,EAAOF,GAEP,OAAOG,IAER,GAAKH,GAAK,EACT,OAAO,EAER,GAAKA,GAAK,EACT,OAAO,EAER,OAAOI,EAAOH,EAAID,GAAMI,EAAOH,EAC/B,CACF,CC7BAM,EAAAC,EAAA,UAAAH"}